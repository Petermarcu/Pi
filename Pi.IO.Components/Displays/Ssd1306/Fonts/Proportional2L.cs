using System;

namespace Pi.IO.Components.Displays.Ssd1306.Fonts
{
	public class Proportional2L : IFont
	{
		private static byte[][] fontData = {
			new byte[] { (byte)' ', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'!', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'"', 8, 16, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			//new byte[] { (byte)'#', 8, 16, 0x00, 0x20, 0xe0, 0x3c, 0x20, 0xe0, 0x3c, 0x20, 0x08, 0x78, 0x0f, 0x08, 0x78, 0x0f, 0x08, 0x00 },
			new byte[] { (byte)'$', 8, 16, 0x00, 0x38, 0x44, 0x84, 0xfe, 0x04, 0x04, 0x18, 0x00, 0x18, 0x20, 0x20, 0x7f, 0x21, 0x22, 0x1c },
			new byte[] { (byte)'%', 8, 16, 0x00, 0x38, 0x44, 0x44, 0xb8, 0x60, 0x10, 0x0c, 0x00, 0x18, 0x04, 0x03, 0x1c, 0x22, 0x22, 0x1c },
			new byte[] { (byte)'&', 8, 16, 0x00, 0x00, 0x38, 0xc4, 0xc4, 0x38, 0x00, 0x80, 0x00, 0x1e, 0x21, 0x20, 0x20, 0x13, 0x0c, 0x33 },
			new byte[] { (byte)'\'', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'(', 8, 16, 0x00, 0x00, 0xe0, 0x18, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x18, 0x20, 0x40, 0x00, 0x00 },
			new byte[] { (byte)')', 8, 16, 0x00, 0x00, 0x02, 0x04, 0x18, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x18, 0x07, 0x00, 0x00 },
			new byte[] { (byte)'*', 8, 16, 0x00, 0x40, 0x80, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
			new byte[] { (byte)'+', 8, 16, 0x00, 0x80, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00 },
			new byte[] { (byte)',', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x30, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'-', 8, 16, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'.', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'/', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x0c, 0x00, 0x00, 0x30, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'0', 8, 16, 0x00, 0xf0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xf0, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0f },
			new byte[] { (byte)'1', 8, 16, 0x00, 0x00, 0x08, 0x08, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'2', 8, 16, 0x00, 0x18, 0x04, 0x04, 0x04, 0x84, 0x78, 0x00, 0x00, 0x38, 0x24, 0x22, 0x21, 0x20, 0x20, 0x00 },
			new byte[] { (byte)'3', 8, 16, 0x00, 0x18, 0x84, 0x84, 0x84, 0x84, 0x78, 0x00, 0x00, 0x18, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00 },
			new byte[] { (byte)'4', 8, 16, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x0c, 0xfc, 0x00, 0x00, 0x04, 0x07, 0x04, 0x04, 0x04, 0x3f, 0x04 },
			new byte[] { (byte)'5', 8, 16, 0x00, 0xfc, 0x44, 0x44, 0x44, 0x44, 0x84, 0x00, 0x00, 0x18, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00 },
			new byte[] { (byte)'6', 8, 16, 0x00, 0xf8, 0x84, 0x84, 0x84, 0x84, 0x18, 0x00, 0x00, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00 },
			new byte[] { (byte)'7', 8, 16, 0x00, 0x04, 0x04, 0x04, 0xc4, 0x34, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'8', 8, 16, 0x00, 0x78, 0x84, 0x84, 0x84, 0x84, 0x78, 0x00, 0x00, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x1f, 0x00 },
			new byte[] { (byte)'9', 8, 16, 0x00, 0xf8, 0x04, 0x04, 0x04, 0x04, 0xf8, 0x00, 0x00, 0x18, 0x21, 0x21, 0x21, 0x21, 0x1f, 0x00 },
			new byte[] { (byte)':', 8, 16, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)';', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x1c, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'<', 8, 16, 0x80, 0x40, 0x40, 0x20, 0x10, 0x10, 0x08, 0x00, 0x00, 0x01, 0x01, 0x02, 0x04, 0x04, 0x08, 0x00 },
			new byte[] { (byte)'=', 8, 16, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02 },
			new byte[] { (byte)'>', 8, 16, 0x00, 0x08, 0x10, 0x10, 0x20, 0x40, 0x40, 0x80, 0x00, 0x08, 0x04, 0x04, 0x02, 0x01, 0x01, 0x00 },
			//new byte[] { (byte)'|'  /* â˜‚ */, 16, 32, 0x00, 0xe0, 0x30, 0x78, 0xf8, 0x3c, 0x3c, 0xfe, 0x7c, 0x3c, 0x3c, 0xf8, 0x78, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'@', 8, 16, 0x00, 0xf0, 0x08, 0xc4, 0x24, 0xe4, 0x08, 0xf0, 0x00, 0x0f, 0x10, 0x23, 0x24, 0x23, 0x24, 0x17 },
			new byte[] { (byte)'A', 8, 16, 0x00, 0x00, 0x00, 0xe0, 0x1c, 0xe0, 0x00, 0x00, 0x00, 0x38, 0x07, 0x04, 0x04, 0x04, 0x07, 0x38 },
			new byte[] { (byte)'B', 8, 16, 0x00, 0xfc, 0x84, 0x84, 0x84, 0x84, 0x48, 0x30, 0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x11, 0x0e },
			new byte[] { (byte)'C', 8, 16, 0x00, 0xf0, 0x08, 0x04, 0x04, 0x04, 0x08, 0x30, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0c },
			new byte[] { (byte)'D', 8, 16, 0x00, 0xfc, 0x04, 0x04, 0x04, 0x04, 0x18, 0xe0, 0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x18, 0x07 },
			new byte[] { (byte)'E', 8, 16, 0x00, 0xfc, 0x84, 0x84, 0x84, 0x84, 0x84, 0x04, 0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 },
			new byte[] { (byte)'F', 8, 16, 0x00, 0xfc, 0x84, 0x84, 0x84, 0x84, 0x84, 0x04, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'G', 8, 16, 0x00, 0xf0, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x21, 0x11, 0x3f },
			new byte[] { (byte)'H', 8, 16, 0x00, 0xfc, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfc, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f },
			new byte[] { (byte)'I', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'J', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x18, 0x20, 0x20, 0x20, 0x1f, 0x00, 0x00 },
			new byte[] { (byte)'K', 8, 16, 0x00, 0xfc, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x00, 0x3f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20 },
			new byte[] { (byte)'L', 8, 16, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00 },
			new byte[] { (byte)'M', 8, 16, 0x00, 0xfc, 0x30, 0xc0, 0x00, 0xc0, 0x30, 0xfc, 0x00, 0x3f, 0x00, 0x00, 0x07, 0x00, 0x00, 0x3f },
			new byte[] { (byte)'N', 8, 16, 0x00, 0xfc, 0x18, 0x60, 0x80, 0x00, 0x00, 0xfc, 0x00, 0x3f, 0x00, 0x00, 0x01, 0x06, 0x18, 0x3f },
			new byte[] { (byte)'O', 8, 16, 0x00, 0xf0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xf0, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0f },
			new byte[] { (byte)'P', 8, 16, 0x00, 0xfc, 0x04, 0x04, 0x04, 0x04, 0x88, 0x70, 0x00, 0x3f, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00 },
			new byte[] { (byte)'Q', 8, 16, 0x00, 0xf0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xf0, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x28, 0x10, 0x2f },
			new byte[] { (byte)'R', 8, 16, 0x00, 0xfc, 0x04, 0x04, 0x04, 0x04, 0x88, 0x70, 0x00, 0x3f, 0x01, 0x01, 0x01, 0x01, 0x02, 0x3c },
			new byte[] { (byte)'S', 8, 16, 0x00, 0x38, 0x44, 0x84, 0x84, 0x04, 0x04, 0x18, 0x00, 0x18, 0x20, 0x20, 0x20, 0x21, 0x22, 0x1c },
			new byte[] { (byte)'T', 8, 16, 0x00, 0x04, 0x04, 0x04, 0xfc, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'U', 8, 16, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x1f },
			new byte[] { (byte)'V', 8, 16, 0x00, 0x1c, 0xe0, 0x00, 0x00, 0x00, 0xe0, 0x1c, 0x00, 0x00, 0x00, 0x07, 0x38, 0x07, 0x00, 0x00 },
			new byte[] { (byte)'W', 8, 16, 0x00, 0xfc, 0x00, 0x80, 0x7c, 0x80, 0x00, 0xfc, 0x00, 0x03, 0x3c, 0x03, 0x00, 0x03, 0x3c, 0x03 },
			new byte[] { (byte)'X', 8, 16, 0x00, 0x0c, 0x30, 0x40, 0x80, 0x40, 0x30, 0x0c, 0x00, 0x30, 0x0c, 0x03, 0x00, 0x03, 0x0c, 0x30 },
			new byte[] { (byte)'Y', 8, 16, 0x00, 0x0c, 0x30, 0xc0, 0x00, 0xc0, 0x30, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'Z', 8, 16, 0x00, 0x04, 0x04, 0x04, 0xc4, 0x34, 0x0c, 0x00, 0x00, 0x30, 0x2c, 0x23, 0x20, 0x20, 0x20, 0x00 },
			new byte[] { (byte)'[', 8, 16, 0x00, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x40, 0x40, 0x40, 0x00 },
			new byte[] { (byte)']', 8, 16, 0x00, 0x02, 0x02, 0x02, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00 },
			//new byte[] { (byte)'^', 8, 16, 0x00, 0x00, 0x08, 0x04, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'_', 8, 16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40 },
			new byte[] { (byte)'`', 8, 16, 0x00, 0x00, 0x02, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'a', 8, 16, 0x00, 0x80, 0x40, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x1c, 0x22, 0x22, 0x22, 0x22, 0x1f, 0x20 },
			new byte[] { (byte)'b', 8, 16, 0x00, 0xfc, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x3f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0f },
			new byte[] { (byte)'c', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40, 0x40, 0x80, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x20, 0x10 },
			new byte[] { (byte)'d', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40, 0x80, 0xfc, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x3f },
			new byte[] { (byte)'e', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x0f, 0x12, 0x22, 0x22, 0x22, 0x22, 0x13 },
			new byte[] { (byte)'f', 8, 16, 0x00, 0x40, 0x40, 0xf8, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'g', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x80, 0xc0, 0x00, 0x00, 0x27, 0x48, 0x50, 0x50, 0x48, 0x3f, 0x00 },
			new byte[] { (byte)'h', 8, 16, 0x00, 0xfc, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00 },
			new byte[] { (byte)'i', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'j', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'k', 8, 16, 0x00, 0xfc, 0x00, 0x00, 0x80, 0x40, 0x20, 0x00, 0x00, 0x3f, 0x02, 0x05, 0x08, 0x10, 0x20, 0x00 },
			new byte[] { (byte)'l', 8, 16, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'m', 8, 16, 0x00, 0xc0, 0x40, 0x40, 0x80, 0x40, 0x40, 0x80, 0x00, 0x3f, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x3f },
			new byte[] { (byte)'n', 8, 16, 0x00, 0xc0, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00 },
			new byte[] { (byte)'o', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x0f, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0f },
			new byte[] { (byte)'p', 8, 16, 0x00, 0xc0, 0x80, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x7f, 0x08, 0x10, 0x10, 0x10, 0x08, 0x07 },
			new byte[] { (byte)'q', 8, 16, 0x00, 0x00, 0x80, 0x40, 0x40, 0x40, 0x80, 0xc0, 0x00, 0x07, 0x08, 0x10, 0x10, 0x10, 0x08, 0x7f },
			new byte[] { (byte)'r', 8, 16, 0x00, 0x00, 0xc0, 0x80, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'s', 8, 16, 0x00, 0x80, 0x40, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x11, 0x22, 0x22, 0x24, 0x24, 0x18, 0x00 },
			new byte[] { (byte)'t', 8, 16, 0x00, 0x40, 0x40, 0xfc, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x20, 0x20, 0x20, 0x00 },
			new byte[] { (byte)'u', 8, 16, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x1f, 0x20, 0x20, 0x20, 0x20, 0x3f, 0x00 },
			new byte[] { (byte)'v', 8, 16, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x03, 0x0c, 0x30, 0x0c, 0x03, 0x00 },
			new byte[] { (byte)'w', 8, 16, 0x00, 0xc0, 0x00, 0x00, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x07, 0x38, 0x0c, 0x03, 0x0c, 0x38, 0x07 },
			new byte[] { (byte)'x', 8, 16, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0x20, 0x10, 0x09, 0x06, 0x09, 0x10, 0x20 },
			new byte[] { (byte)'y', 8, 16, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x40, 0x43, 0x4c, 0x30, 0x0c, 0x03, 0x00 },
			new byte[] { (byte)'z', 8, 16, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0xc0, 0x00, 0x00, 0x30, 0x28, 0x24, 0x22, 0x21, 0x20, 0x00 },
			new byte[] { (byte)'Â©', 8, 16, 0xe0, 0x18, 0xe4, 0x14, 0x14, 0x24, 0x18, 0xe0, 0x07, 0x18, 0x27, 0x28, 0x28, 0x24, 0x18, 0x07 },
			new byte[] { (byte)'Â®', 16, 32, 0x00, 0x00, 0xc0, 0x30, 0x08, 0xe8, 0x14, 0x14, 0x14, 0x14, 0xe8, 0x08, 0x30, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x10, 0x1f, 0x21, 0x21, 0x21, 0x21, 0x1e, 0x10, 0x0c, 0x03, 0x00, 0x00 },
			new byte[] { (byte)'\\' /* Â° */, 16, 32, 0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
			new byte[] { (byte)'#' /* bulb */, 11, 22, 0x00, 0x78, 0xe4, 0xfa, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x78, 0x00, 0x00, 0x00, 0x01, 0x17, 0x77, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00 },
			new byte[] { (byte)'|' /* plug */, 12, 24, 0x00, 0x60, 0xe0, 0xfe, 0xfe, 0xe0, 0xe0, 0xfe, 0xfe, 0xe0, 0x60, 0x00, 0x00, 0x00, 0x07, 0x0f, 0x0f, 0x7f, 0x7f, 0x0f, 0x0f, 0x07, 0x00, 0x00 },
			new byte[] { (byte)'^' /* lightning */, 9, 18, 0x00, 0xe0, 0xfe, 0xfe, 0x5e, 0xc6, 0xe0, 0xe0, 0x00, 0x00, 0x01, 0x60, 0x38, 0x0e, 0x07, 0x01, 0x00, 0x00 }
		};
        
        public byte[][] GetData()
        {
            return Proportional2L.fontData;
        }
    }
}

